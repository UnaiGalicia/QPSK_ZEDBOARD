/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"

//#include “xparameters.h”

void etengabe();
void aukera();
void eskatuBitak(unsigned int *m, unsigned int n);
void eskatuPositibo(unsigned int *par);

int main()
{
	 init_platform();

	 printf("QPSK Moduladorea Hamsterrarekin Zynqean\nAritz Arroita, Aintzel Bereziartua, Unai Galicia\n");
	 int  auk=0;
	 while(auk!=3){
		 printf("Zer egin nahi dezu?\n1. lau sinboloak bata bestearen atzetik bidali etengabe\n2. Zuk aukeratutako sinbolo bat bidali\n3. Irten\n ");
		 scanf("%d", &auk);
		 switch(auk){

		 	 case(1): etengabe(); break;
		 	 case(2): aukera(); break;
		 	 case(3):break;
		 	 default: printf("Aukera ez da egokia");


	 }


	 }
	printf("Agur!");
	cleanup_platform();
	return 0;
}


void etengabe(){
	unsigned int egoera = 0x00000000; //Gogoratu QPSK blokea datuak jasotzeko prest egongo dela FIFOaren FULL flaga 0 denean - egoera=0x00000000
	int i=0;

	while(1)
		{
			 if(*(unsigned int*)((0x43c00004)) == egoera){

				 switch(i){
				 case 0: *(unsigned int*)(0x43c00000)=0x0af50af4; break;
				 case 1: *(unsigned int*)(0x43c00000)=0x4af50af4; break;
				 case 2: *(unsigned int*)(0x43c00000)=0x8af50af4; break;
				 case 3: *(unsigned int*)(0x43c00000)=0xfaf50af4; break;
				 default: i=0;}

				 i=i+1;

				 if(i==4)
					 i=0;

			 	 printf("Idatzi da\n");

			 }

			 else
				 printf("Ezin da irakurri - Egoera: %x\n \n", *(unsigned int*)((0x43c00004)));


		}

}


void aukera(){
	unsigned int egoera = 0x00000000;
	unsigned int sinb=0, a=0;
	unsigned int kopurua=0;



	printf("sartu modulatu nahi dituzun biten kopurua: \n");

	do {
			printf("BIT KOPURUA BIKOITIA IZAN BEHAR DA\n");
			printf("Sartu bit kopurua: ");

			scanf("%d", &kopurua);
			printf("\n");
		} while ((kopurua % 2) != 0);

	unsigned int bitak[kopurua];

	eskatuBitak(bitak, kopurua);


	while(1){

		for(a=0; a<kopurua; a+=2)
		{
			 if(*(unsigned int*)((0x43c00004)) == egoera){

				 if(bitak[a]==0 && bitak[a+1]==0)
					 *(unsigned int*)(0x43c00000)=0x0af50af4;
				 if(bitak[a]==0 && bitak[a+1]==1)
				 	 *(unsigned int*)(0x43c00000)=0x4af50af4;
				 if(bitak[a]==1 && bitak[a+1]==0)
				 	 *(unsigned int*)(0x43c00000)=0x8af50af4;
				 if(bitak[a]==1 && bitak[a+1]==1)
				 	 *(unsigned int*)(0x43c00000)=0xfaf50af4;

			 }

			 else
				 printf("Ezin da irakurri - Egoera: %x\n \n", *(unsigned int*)((0x43c00004)));


		}
	}

}

void eskatuBitak(unsigned int *m, unsigned int n) {

	printf("Joan bitak banan bana sartzen\n");

	for (unsigned int i = 0; i < n; i++) {
		do{
			printf("%d. bita: ", (i + 1));

			scanf("%d", &m[i]);

		} while (m[i] > (unsigned int)1 && m[i] > 0);
	}


}


